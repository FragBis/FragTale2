<?php

namespace /*namespace*/;

use /*useController*/;
use /*useEntity*/;
use FragTale\Constant\Database\SqlAlias;

/**
 * List database data
 */
class /*Class*/ extends WebController {
	protected /*Entity*/ $Entity;

	/**
	 */
	function __construct() {
		parent::__construct ();

		$this->Entity = new /*Entity*/ ();
		
		$templatePath = $this->getSuperServices ()->getProjectService ()->getTemplatesDir () . '//*templatePath*/';
		$this->getTemplate ()
			->setPath ( $templatePath ) // Explicitly set view (template) path
			->setObject ( 'Entity', $this->Entity ) // Objects are passed by reference
			->setTitle ( sprintf ( _ ( 'List of %s' ), $this->Entity->getTableName () ) );
	}

	/**
	 * Executed whatever request method is POST, GET...
	 */
	protected function executeOnTop(): void {
		$RequestService = $this->getSuperServices ()->getHttpRequestService ();
		// Paginator
		$totalRows = $this->Entity->getTotalRowCount ();
		$pageNum = ( int ) $RequestService->getParamValue ( 'page' );
		if ($pageNum < 1)
			$pageNum = 1;
		$nbDisplayedRows = ( int ) $RequestService->getParamValue ( 'nb_rows' );
		if (! $nbDisplayedRows)
			$nbDisplayedRows = 10;
		$pageCount = ( int ) ($totalRows / $nbDisplayedRows);
		if (($pageCount * $nbDisplayedRows) < $totalRows)
			$pageCount ++;
		if ($pageCount && $pageNum > $pageCount)
			$pageNum = $pageCount;
		$limMin = ($pageNum - 1) * $nbDisplayedRows;
		$order = $RequestService->getParamValue ( 'order' );
		if (! $order)
			$order = 1;
		$orderDirection = ( string ) $RequestService->getParamValue ( 'direction' );
		if (! in_array ( strtoupper ( $orderDirection ), [ 
				SqlOrder::ASC,
				SqlOrder::DESC
		] ))
			$orderDirection = SqlOrder::DESC;

		// Load data
		$this->Entity->selectAs ( 'T1', '*' )
			->orderBy ( [ 
				$order => $orderDirection
		] )
			->limit ( [ 
				$limMin,
				$nbDisplayedRows
		] )
			->execute ();

		// Set template variables
		$this->getTemplate ()
			->setVar ( 'total_rows', $totalRows )
			->setVar ( 'page_num', $pageNum )
			->setVar ( 'nb_displayed_rows', $nbDisplayedRows )
			->setVar ( 'order', $order )
			->setVar ( 'direction', $orderDirection )
			->setVar ( 'page_count', $pageCount );
	}
}